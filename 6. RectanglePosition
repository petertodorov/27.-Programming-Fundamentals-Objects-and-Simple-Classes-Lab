using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Numerics;
class RectanglePosition
{
    static void Main(string[] args)
    {
        Coordinates firstRectange = Coordinates.ReadInput(Console.ReadLine());
        Coordinates secondRectange = Coordinates.ReadInput(Console.ReadLine());
      
        Rectangles r1 = new Rectangles(
            firstRectange.Left, firstRectange.Top,
            firstRectange.Right,firstRectange.Bottom);
        Rectangles r2 =  new Rectangles(
            secondRectange.Left, secondRectange.Top,
            secondRectange.Right, secondRectange.Bottom);
        Rectangles.Compare(r1,r2);
    }
}
class Rectangles
{
    public int Left { get; set; }
    public int Top { get; set; }
    public int Right { get; set; }
    public int Bottom { get; set; }

    public Rectangles (int xCoord, int yCoord, int xCoord1, int yCoord2)
    {
        Left = xCoord;
        Top = yCoord;
        Right = xCoord1;
        Bottom = yCoord2;
    }
    public static void Compare(Rectangles r1,Rectangles r2)
    {
        if ( r1.Left >= r2.Left &&
            r1.Right <= r2.Right &&
            r1.Top <= r2.Top &&
            r1.Bottom <= r2.Bottom)
        {
            Console.WriteLine("Inside");
        }
        else
        {
            Console.WriteLine("Not Inside");
        }
    }
}
class Coordinates
{
    public int Left { get; set; }
    public int Top { get; set; }
    public int Width { get; set; }
    public int Height { get; set; }
    public int Bottom { get; set; }
    public int Right { get; set; }

    public Coordinates (List<int> tokens)
    {
        Left = tokens[0];
        Top = tokens[1];
        Width = tokens[2];
        Height = tokens[3];
        Bottom = Top + Height;
        Right = Left + Width;
    }
    public static Coordinates ReadInput(string input)
    {
        List<int> tokens = input.Split(' ').Select(int.Parse).ToList();
        return new Coordinates (tokens);
    }
}
